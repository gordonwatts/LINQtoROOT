using System;
using System.IO;

namespace LinqToTTreeInterfacesLib
{
    public interface IExecutionEnvironment
    {
        /// <summary>
        /// Some classes will require a dict to be made in order for the loading
        /// to proceed. This includes things like user classes.
        /// </summary>
        string[][] ClassesToDictify { get; }

        /// <summary>
        /// These are extra files that have to be loaded in order to run
        /// the query. These include things like user objects.
        /// </summary>
        FileInfo[] ExtraComponentFiles { get; }

        /// <summary>
        /// True if we should clean up the files after teh query is run. Otherwise
        /// not. Helpful with debugging.
        /// </summary>
        bool CleanupQuery { get; }

        /// <summary>
        /// When building locally do it with debug symbols. Helps with debugging
        /// the crash dumps in queires generated by the code - especially complex ones.
        /// </summary>
        bool CompileDebug { get; }

        /// <summary>
        /// Break into the debugger just before root's TTree::Process is invoked
        /// </summary>
        /// <remarks>Clearly hard to do when running remotely!</remarks>
        bool BreakToDebugger { get; }

        /// <summary>
        /// If set emit verbose messages
        /// </summary>
        bool Verbose { get; }

        /// <summary>
        /// Name of the tree we will be loading and processing.
        /// </summary>
        string TreeName { get; }
    }
}
