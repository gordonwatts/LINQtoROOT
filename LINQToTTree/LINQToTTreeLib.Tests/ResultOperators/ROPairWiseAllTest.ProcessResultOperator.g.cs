using LINQToTTreeLib.Variables;
using LINQToTTreeLib;
using LinqToTTreeInterfacesLib;
using ROOTNET;
using LINQToTTreeLib.ResultOperators;
using Remotion.Linq.Clauses;
using Remotion.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Statements;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests
{
    public partial class ROPairWiseAllTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException775()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, 0);
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException974()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, 1);
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException574()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, 0);
    string[] ss = new string[1];
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  ss, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException203()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, 0);
    string[] ss = new string[1];
    ss[0] = "";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  ss, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException518()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss = new string[1];
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  (string[])null, (NTObject[])null, ss);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException18()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      VarInteger varInteger;
      NTObject nTObject;
      GeneratedCode generatedCode;
      IVariable iVariable;
      varInteger = VarIntegerFactory.Create(false, int.MaxValue);
      nTObject = NTObjectFactory.Create();
      disposables.Add((IDisposable)nTObject);
      NTObject[] nTObjects = new NTObject[1];
      nTObjects[0] = nTObject;
      generatedCode =
        GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                    (string[])null, nTObjects, (string[])null);
      ROUniqueCombinations s0 = new ROUniqueCombinations();
      iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                             (QueryModel)null, (CodeContext)null, generatedCode);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException544()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementIncrementInteger;
    generatedCode = GeneratedCodeFactory.Create((IVariable)varInteger, iStatements, 
                                                (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException248()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss = new string[2];
    ss[0] = "";
    ss[1] = "";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  ss, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException34()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      VarInteger varInteger;
      NTObject nTObject;
      GeneratedCode generatedCode;
      IVariable iVariable;
      varInteger = VarIntegerFactory.Create(false, int.MaxValue);
      nTObject = NTObjectFactory.Create();
      disposables.Add((IDisposable)nTObject);
      NTObject[] nTObjects = new NTObject[2];
      nTObjects[0] = nTObject;
      nTObjects[1] = nTObject;
      generatedCode =
        GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                    (string[])null, nTObjects, (string[])null);
      ROUniqueCombinations s0 = new ROUniqueCombinations();
      iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                             (QueryModel)null, (CodeContext)null, generatedCode);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException910()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    StatementIfOnCount statementIfOnCount;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    statementIfOnCount =
      StatementIfOnCountFactory.Create((IVariable)varInteger, (IValue)varInteger, 
                                       StatementIfOnCount.ComparisonOperator.GreaterThan, 
                                       (IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementIncrementInteger;
    iStatements[1] = (IStatement)statementIfOnCount;
    generatedCode = GeneratedCodeFactory.Create((IVariable)varInteger, iStatements, 
                                                (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException808()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    StatementIfOnCount statementIfOnCount;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IVariable[] iVariables = new IVariable[1];
    iVariables[0] = (IVariable)varInteger;
    statementIfOnCount =
      StatementIfOnCountFactory.Create((IVariable)varInteger, (IValue)varInteger, 
                                       StatementIfOnCount.ComparisonOperator.GreaterThan, 
                                       (IStatement[])null, iVariables);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementIncrementInteger;
    iStatements[1] = (IStatement)statementIfOnCount;
    generatedCode = GeneratedCodeFactory.Create((IVariable)varInteger, iStatements, 
                                                (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(ROPairWiseAllTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessResultOperatorThrowsArgumentNullException195()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    StatementIfOnCount statementIfOnCount;
    StatementInlineBlock statementInlineBlock;
    GeneratedCode generatedCode;
    IVariable iVariable;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    statementIfOnCount =
      StatementIfOnCountFactory.Create((IVariable)varInteger, (IValue)varInteger, 
                                       StatementIfOnCount.ComparisonOperator.GreaterThan, 
                                       (IStatement[])null, (IVariable[])null);
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[3];
    iStatements[0] = (IStatement)statementIncrementInteger;
    iStatements[1] = (IStatement)statementIfOnCount;
    iStatements[2] = (IStatement)statementInlineBlock;
    generatedCode = GeneratedCodeFactory.Create((IVariable)varInteger, iStatements, 
                                                (string[])null, (NTObject[])null, (string[])null);
    ROUniqueCombinations s0 = new ROUniqueCombinations();
    iVariable = this.ProcessResultOperator(s0, (ResultOperatorBase)null, 
                                           (QueryModel)null, (CodeContext)null, generatedCode);
}
    }
}
