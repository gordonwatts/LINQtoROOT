using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests
{
    public partial class ExpressionUtilitiesTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestApplyThrowsArgumentNullException449()
{
    string s;
    s = this.TestApply((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestApplyThrowsArgumentNullException702()
{
    string s;
    s = this.TestApply("");
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply40()
{
    string s;
    s = this.TestApply("\0");
    Assert.AreEqual<string>("(\0)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply235()
{
    string s;
    s = this.TestApply("-");
    Assert.AreEqual<string>("(-)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply981()
{
    string s;
    s = this.TestApply("\u00e9");
    Assert.AreEqual<string>("\u00e9", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply370()
{
    string s;
    s = this.TestApply("(");
    Assert.AreEqual<string>("(", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply194()
{
    string s;
    s = this.TestApply("\u0100\0");
    Assert.AreEqual<string>("(\u0100\0)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply601()
{
    string s;
    s = this.TestApply("(\0\0\0\0");
    Assert.AreEqual<string>("(\0\0\0\0", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply181()
{
    string s;
    s = this.TestApply("()\0\0\0");
    Assert.AreEqual<string>("(()\0\0\0)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply692()
{
    string s;
    s = this.TestApply("((\0\0\0");
    Assert.AreEqual<string>("((\0\0\0", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply25()
{
    string s;
    s = this.TestApply("(((\0\0");
    Assert.AreEqual<string>("(((\0\0", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply143()
{
    string s;
    s = this.TestApply("(())\0");
    Assert.AreEqual<string>("((())\0)", s);
}
    }
}
