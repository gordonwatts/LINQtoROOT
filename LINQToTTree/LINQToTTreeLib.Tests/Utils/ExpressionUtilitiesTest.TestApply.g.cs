// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LINQToTTreeLib.Tests
{
    public partial class ExpressionUtilitiesTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestApplyThrowsArgumentNullException327()
{
    string s;
    s = this.TestApply((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestApplyThrowsArgumentNullException113()
{
    string s;
    s = this.TestApply("");
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply40()
{
    string s;
    s = this.TestApply("\0");
    Assert.AreEqual<string>("(\0)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply370()
{
    string s;
    s = this.TestApply("(");
    Assert.AreEqual<string>("(", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply18()
{
    string s;
    s = this.TestApply("\u00ea");
    Assert.AreEqual<string>("\u00ea", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply270()
{
    string s;
    s = this.TestApply("(\0");
    Assert.AreEqual<string>("(\0", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply454()
{
    string s;
    s = this.TestApply("()");
    Assert.AreEqual<string>("()", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply662()
{
    string s;
    s = this.TestApply("((");
    Assert.AreEqual<string>("((", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply283()
{
    string s;
    s = this.TestApply("u\u0089");
    Assert.AreEqual<string>("(u\u0089)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply380()
{
    string s;
    s = this.TestApply("\u00f8f");
    Assert.AreEqual<string>("\u00f8f", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply27001()
{
    string s;
    s = this.TestApply("(\0\0");
    Assert.AreEqual<string>("(\0\0", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply235()
{
    string s;
    s = this.TestApply("\u0100\u0100~");
    Assert.AreEqual<string>("(\u0100\u0100~)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply80()
{
    string s;
    s = this.TestApply("(\0((");
    Assert.AreEqual<string>("(\0((", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply438()
{
    string s;
    s = this.TestApply("()\0");
    Assert.AreEqual<string>("(()\0)", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply430()
{
    string s;
    s = this.TestApply("((\0\0))");
    Assert.AreEqual<string>("((\0\0))", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply526()
{
    string s;
    s = this.TestApply("\u0100\u0100v");
    Assert.AreEqual<string>("\u0100\u0100v", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExpressionUtilitiesTest))]
public void TestApply964()
{
    string s;
    s = this.TestApply("v\u0100");
    Assert.AreEqual<string>("v\u0100", s);
}
    }
}
