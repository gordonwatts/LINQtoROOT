using LinqToTTreeInterfacesLib;
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Statements
{
    public partial class StatementFilterTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
public void TestRename377()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementFilter statementFilter;
    IStatement iStatement;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    IStatement[] iStatements = new IStatement[0];
    IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[0];
    statementFilter = StatementFilterFactory.Create
                          ((IValue)dummyVarName, iStatements, iDeclaredParameters);
    iStatement = this.TestRename(statementFilter, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementFilter);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementFilter, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
public void TestRename37701()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementFilter statementFilter;
    IStatement iStatement;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    IStatement[] iStatements = new IStatement[0];
    IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
    iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
    statementFilter = StatementFilterFactory.Create
                          ((IValue)dummyVarName, iStatements, iDeclaredParameters);
    iStatement = this.TestRename(statementFilter, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementFilter);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementFilter, (object)iStatement));
}
    }
}
