using LINQToTTreeLib.Variables;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Statements
{
    public partial class StatementFilterTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException822()
{
    VarInteger varInteger;
    StatementFilter statementFilter;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    IStatement[] iStatements = new IStatement[0];
    IVariable[] iVariables = new IVariable[0];
    statementFilter =
      StatementFilterFactory.Create((IValue)varInteger, iStatements, iVariables);
    iStatement = this.TestRename(statementFilter, "", "");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException47()
{
    VarInteger varInteger;
    StatementFilter statementFilter;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    IStatement[] iStatements = new IStatement[0];
    IVariable[] iVariables = new IVariable[0];
    statementFilter =
      StatementFilterFactory.Create((IValue)varInteger, iStatements, iVariables);
    iStatement = this.TestRename(statementFilter, "\t", "\t");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException875()
{
    VarInteger varInteger;
    StatementFilter statementFilter;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    IStatement[] iStatements = new IStatement[0];
    IVariable[] iVariables = new IVariable[1];
    iVariables[0] = (IVariable)varInteger;
    statementFilter =
      StatementFilterFactory.Create((IValue)varInteger, iStatements, iVariables);
    iStatement = this.TestRename(statementFilter, "", "");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementFilterTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException634()
{
    VarInteger varInteger;
    StatementFilter statementFilter;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    IStatement[] iStatements = new IStatement[0];
    IVariable[] iVariables = new IVariable[0];
    statementFilter =
      StatementFilterFactory.Create((IValue)varInteger, iStatements, iVariables);
    iStatement = this.TestRename(statementFilter, "\u0089", "\t");
}
    }
}
