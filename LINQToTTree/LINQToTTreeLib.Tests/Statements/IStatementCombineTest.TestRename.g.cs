using LinqToTTreeInterfacesLib;
using LINQToTTreeLib.Statements;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests.Statements
{
    public partial class IStatementCombineTest
    {
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename693()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename936()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "\0", "\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename760()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "$", "$");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename31()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "$\0", "$\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename973()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "$0", "$0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename468()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "${\0", "${\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename805()
{
    StatementSimpleStatement statementSimpleStatement;
    IStatement iStatement;
    statementSimpleStatement = StatementSimpleStatementFactory.Create("\0", false);
    iStatement = this.TestRename((IStatement)statementSimpleStatement, "\0", "\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementSimpleStatement);
    Assert.IsTrue(
                 object.ReferenceEquals((object)statementSimpleStatement, (object)iStatement)
                 );
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename377()
{
    StatementInlineBlock statementInlineBlock;
    IStatement iStatement;
    statementInlineBlock = StatementInlineBlockFactory.Create
                               ((IStatement[])null, (IDeclaredParameter[])null);
    iStatement = this.TestRename((IStatement)statementInlineBlock, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementInlineBlock);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementInlineBlock, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename37701()
{
    StatementInlineBlock statementInlineBlock;
    IStatement iStatement;
    IStatement[] iStatements = new IStatement[1];
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatements[0] = (IStatement)s0;
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
    iStatement = this.TestRename((IStatement)statementInlineBlock, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementInlineBlock);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementInlineBlock, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename37702()
{
    StatementInlineBlock statementInlineBlock;
    StatementInlineBlock statementInlineBlock1;
    IStatement iStatement;
    statementInlineBlock = StatementInlineBlockFactory.Create
                               ((IStatement[])null, (IDeclaredParameter[])null);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementInlineBlock;
    statementInlineBlock1 =
      StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
    iStatement = this.TestRename((IStatement)statementInlineBlock1, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementInlineBlock1);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementInlineBlock1, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename80502()
{
    StatementSimpleStatement statementSimpleStatement;
    IStatement iStatement;
    statementSimpleStatement = StatementSimpleStatementFactory.Create("\0", true);
    iStatement = this.TestRename((IStatement)statementSimpleStatement, "\0", "\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementSimpleStatement);
    Assert.IsTrue(
                 object.ReferenceEquals((object)statementSimpleStatement, (object)iStatement)
                 );
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename277()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "${0}", "${0}");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename45()
{
    IStatement iStatement;
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatement = this.TestRename((IStatement)s0, "$+\0", "$+\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)s0);
    Assert.IsTrue(object.ReferenceEquals((object)s0, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename37706()
{
    StatementInlineBlock statementInlineBlock;
    IStatement iStatement;
    IStatement[] iStatements = new IStatement[2];
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatements[0] = (IStatement)s0;
    StatementBreak s1 = new StatementBreak();
    s1.Parent = (IStatement)null;
    iStatements[1] = (IStatement)s1;
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
    iStatement = this.TestRename((IStatement)statementInlineBlock, "", "");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementInlineBlock);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementInlineBlock, (object)iStatement));
}
[TestMethod]
[PexGeneratedBy(typeof(IStatementCombineTest))]
public void TestRename80503()
{
    StatementSimpleStatement statementSimpleStatement;
    StatementInlineBlock statementInlineBlock;
    IStatement iStatement;
    statementSimpleStatement = StatementSimpleStatementFactory.Create("\0", false);
    IStatement[] iStatements = new IStatement[2];
    StatementBreak s0 = new StatementBreak();
    s0.Parent = (IStatement)null;
    iStatements[0] = (IStatement)s0;
    iStatements[1] = (IStatement)statementSimpleStatement;
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
    iStatement = this.TestRename((IStatement)statementInlineBlock, "\0", "\0");
    Assert.IsNotNull((object)iStatement);
    Assert.IsNotNull((object)statementInlineBlock);
    Assert.IsTrue
        (object.ReferenceEquals((object)statementInlineBlock, (object)iStatement));
}
    }
}
