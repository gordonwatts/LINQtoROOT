using LINQToTTreeLib.Statements;
using System;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests
{
    public partial class TestStatementAnyAllDetector
    {
[TestMethod]
[PexGeneratedBy(typeof(TestStatementAnyAllDetector))]
public void TestCodeItUp643()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementAnyAllDetector statementAnyAllDetector;
    string[] ss;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    statementAnyAllDetector = StatementAnyAllDetectorFactory.Create
                                  ((IValue)dummyVarName, (IDeclaredParameter)dummyVarName, "");
    ss = this.TestCodeItUp(statementAnyAllDetector);
    Assert.IsNotNull((object)ss);
    Assert.AreEqual<int>(4, ss.Length);
    Assert.AreEqual<string>("if () {", ss[0]);
    Assert.AreEqual<string>("   = ;", ss[1]);
    Assert.AreEqual<string>("  break;", ss[2]);
    Assert.AreEqual<string>("}", ss[3]);
    Assert.IsNotNull((object)statementAnyAllDetector);
    Assert.IsNull(statementAnyAllDetector.Parent);
}
    }
}
