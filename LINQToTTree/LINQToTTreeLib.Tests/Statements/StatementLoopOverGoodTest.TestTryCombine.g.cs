using LINQToTTreeLib.Statements;
using System;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests.Statements
{
    public partial class StatementLoopOverGoodTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementLoopOverGoodTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestTryCombineThrowsArgumentNullException969()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementLoopOverGood statementLoopOverGood;
    bool b;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    statementLoopOverGood = StatementLoopOverGoodFactory.Create
                                ((IValue)dummyVarName, (IValue)dummyVarName, 
                                 (IDeclaredParameter)dummyVarName, 
                                 (IStatement[])null, (IDeclaredParameter[])null);
    b = this.TestTryCombine(statementLoopOverGood, (IStatement)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementLoopOverGoodTest))]
[ExpectedException(typeof(ArgumentException))]
public void TestTryCombineThrowsArgumentException174()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementLoopOverGood statementLoopOverGood;
    bool b;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    statementLoopOverGood = StatementLoopOverGoodFactory.Create
                                ((IValue)dummyVarName, (IValue)dummyVarName, 
                                 (IDeclaredParameter)dummyVarName, 
                                 (IStatement[])null, (IDeclaredParameter[])null);
    b =
      this.TestTryCombine(statementLoopOverGood, (IStatement)statementLoopOverGood);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementLoopOverGoodTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestTryCombineThrowsArgumentNullException48()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementLoopOverGood statementLoopOverGood;
    bool b;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
    iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
    statementLoopOverGood = StatementLoopOverGoodFactory.Create
                                ((IValue)dummyVarName, (IValue)dummyVarName, 
                                 (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
    b = this.TestTryCombine(statementLoopOverGood, (IStatement)null);
}
    }
}
