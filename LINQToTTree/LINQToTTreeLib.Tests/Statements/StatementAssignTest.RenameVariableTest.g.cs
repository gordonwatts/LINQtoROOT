using LINQToTTreeLib.Variables;
using LINQToTTreeLib.Statements;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests
{
    public partial class StatementAssignTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void RenameVariableTestThrowsArgumentNullException119()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementAssign statementAssign1;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementAssign1 =
      this.RenameVariableTest(statementAssign, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void RenameVariableTestThrowsArgumentNullException824()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementAssign statementAssign1;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementAssign1 = this.RenameVariableTest(statementAssign, "", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void RenameVariableTestThrowsArgumentNullException729()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementAssign statementAssign1;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementAssign1 = this.RenameVariableTest(statementAssign, "a", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void RenameVariableTestThrowsArgumentNullException145()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementAssign statementAssign1;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementAssign1 =
      this.RenameVariableTest(statementAssign, "\u0100n", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void RenameVariableTestThrowsArgumentNullException888()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementAssign statementAssign1;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementAssign1 =
      this.RenameVariableTest(statementAssign, "anin", (string)null);
}
    }
}
