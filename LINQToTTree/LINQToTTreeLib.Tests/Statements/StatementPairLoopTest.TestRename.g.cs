// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using LINQToTTreeLib.Statements;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace LINQToTTreeLib.Tests.Statements
{
    public partial class StatementPairLoopTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementPairLoopTest))]
public void TestRename822()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementPairLoop statementPairLoop;
    StatementPairLoop statementPairLoop1;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    statementPairLoop = StatementPairLoopFactory.Create
                            ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName, 
                             (IDeclaredParameter)dummyVarName, 
                             (IStatement[])null, (IDeclaredParameter[])null);
    statementPairLoop1 =
      this.TestRename(statementPairLoop, (string)null, (string)null);
    Assert.IsNotNull((object)statementPairLoop1);
    Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop1).Statements);
    Assert.IsNotNull
        (((StatementInlineBlockBase)statementPairLoop1).DeclaredVariables);
    Assert.IsNull(((StatementInlineBlockBase)statementPairLoop1).Parent);
    Assert.IsNotNull((object)statementPairLoop);
    Assert.IsTrue(object.ReferenceEquals
                      ((object)statementPairLoop, (object)statementPairLoop1));
}
[TestMethod]
[PexGeneratedBy(typeof(StatementPairLoopTest))]
public void TestRename82201()
{
    StatementInlineBlockTest.dummyVarName dummyVarName;
    StatementPairLoop statementPairLoop;
    StatementPairLoop statementPairLoop1;
    dummyVarName =
      new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
    dummyVarName.InitialValue = (IValue)null;
    dummyVarName.Declare = false;
    dummyVarName.RawValue = (string)null;
    IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
    iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
    statementPairLoop = StatementPairLoopFactory.Create
                            ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName, 
                             (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
    statementPairLoop1 =
      this.TestRename(statementPairLoop, (string)null, (string)null);
    Assert.IsNotNull((object)statementPairLoop1);
    Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop1).Statements);
    Assert.IsNotNull
        (((StatementInlineBlockBase)statementPairLoop1).DeclaredVariables);
    Assert.IsNull(((StatementInlineBlockBase)statementPairLoop1).Parent);
    Assert.IsNotNull((object)statementPairLoop);
    Assert.IsTrue(object.ReferenceEquals
                      ((object)statementPairLoop, (object)statementPairLoop1));
}
    }
}
