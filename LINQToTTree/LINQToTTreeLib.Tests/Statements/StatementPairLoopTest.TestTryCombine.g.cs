// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using LinqToTTreeInterfacesLib;
using LINQToTTreeLib.Statements;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LINQToTTreeLib.Tests.Statements
{
    public partial class StatementPairLoopTest
    {
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombineThrowsArgumentNullException500()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                     (IDeclaredParameter)dummyVarName,
                                     (IStatement[])null, (IDeclaredParameter[])null);
            b = this.TestTryCombine
                    (statementPairLoop, (IStatement)null, (ICodeOptimizationService)null);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        public void TestTryCombine521()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                     (IDeclaredParameter)dummyVarName,
                                     (IStatement[])null, (IDeclaredParameter[])null);
            b = this.TestTryCombine(statementPairLoop,
                                    (IStatement)statementPairLoop, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop).DeclaredVariables);
            Assert.IsNull(((StatementInlineBlockBase)statementPairLoop).Parent);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombineThrowsArgumentNullException698()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                     (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
            b = this.TestTryCombine
                    (statementPairLoop, (IStatement)null, (ICodeOptimizationService)null);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        public void TestTryCombine52101()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                     (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
            b = this.TestTryCombine(statementPairLoop,
                                    (IStatement)statementPairLoop, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop).DeclaredVariables);
            Assert.IsNull(((StatementInlineBlockBase)statementPairLoop).Parent);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombine52104()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            StatementPairLoop statementPairLoop1;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)null,
                                     (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
            statementPairLoop1 = StatementPairLoopFactory.Create
                                     ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                      (IDeclaredParameter)dummyVarName,
                                      (IStatement[])null, (IDeclaredParameter[])null);
            b = this.TestTryCombine(statementPairLoop1,
                                    (IStatement)statementPairLoop, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop1);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop1).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop1).DeclaredVariables);
            Assert.IsNull(((StatementInlineBlockBase)statementPairLoop1).Parent);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombine52106()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            StatementPairLoop statementPairLoop1;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)null,
                                     (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
            IStatement[] iStatements = new IStatement[1];
            iStatements[0] = (IStatement)statementPairLoop;
            statementPairLoop1 = StatementPairLoopFactory.Create
                                     ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)null,
                                      (IDeclaredParameter)null, iStatements, (IDeclaredParameter[])null);
            b = this.TestTryCombine(statementPairLoop1,
                                    (IStatement)statementPairLoop, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop1);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop1).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop1).DeclaredVariables);
            Assert.IsNull(((StatementInlineBlockBase)statementPairLoop1).Parent);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombine52109()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            StatementPairLoop statementPairLoop1;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)dummyVarName,
                                     (IDeclaredParameter)dummyVarName, (IStatement[])null, iDeclaredParameters);
            IStatement[] iStatements = new IStatement[1];
            iStatements[0] = (IStatement)statementPairLoop;
            statementPairLoop1 = StatementPairLoopFactory.Create
                                     ((IDeclaredParameter)null, (IDeclaredParameter)dummyVarName,
                                      (IDeclaredParameter)dummyVarName, iStatements, (IDeclaredParameter[])null);
            b = this.TestTryCombine
                    (statementPairLoop1, (IStatement)null, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop1);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop1).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop1).DeclaredVariables);
            Assert.IsNull(((StatementInlineBlockBase)statementPairLoop1).Parent);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(StatementPairLoopTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestTryCombine52110()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementPairLoop statementPairLoop;
            StatementPairLoop statementPairLoop1;
            bool b;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)null;
            statementPairLoop = StatementPairLoopFactory.Create
                                    ((IDeclaredParameter)dummyVarName, (IDeclaredParameter)null,
                                     (IDeclaredParameter)null, (IStatement[])null, iDeclaredParameters);
            IStatement[] iStatements = new IStatement[1];
            iStatements[0] = (IStatement)statementPairLoop;
            statementPairLoop1 = StatementPairLoopFactory.Create
                                     ((IDeclaredParameter)null, (IDeclaredParameter)null,
                                      (IDeclaredParameter)dummyVarName, iStatements, (IDeclaredParameter[])null);
            b = this.TestTryCombine(statementPairLoop,
                                    (IStatement)statementPairLoop1, (ICodeOptimizationService)null);
            Assert.AreEqual<bool>(true, b);
            Assert.IsNotNull((object)statementPairLoop);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop).Statements);
            Assert.IsNotNull
                (((StatementInlineBlockBase)statementPairLoop).DeclaredVariables);
            Assert.IsNotNull(((StatementInlineBlockBase)statementPairLoop).Parent);
            Assert.IsTrue(object.ReferenceEquals
                              (((StatementInlineBlockBase)statementPairLoop).Parent,
                               (object)statementPairLoop));
        }
    }
}
