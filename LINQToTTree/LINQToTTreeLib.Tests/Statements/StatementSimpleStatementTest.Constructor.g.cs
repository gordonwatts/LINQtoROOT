// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LINQToTTreeLib.Statements
{
    public partial class StatementSimpleStatementTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException320()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor("");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException122()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException913()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor(";");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException114()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor(";;");
}
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
public void Constructor722()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor("\0;;");
    Assert.IsNotNull((object)statementSimpleStatement);
    Assert.AreEqual<string>("\0", statementSimpleStatement.Line);
    Assert.AreEqual<bool>(true, statementSimpleStatement.AddSemicolon);
    Assert.IsNull(statementSimpleStatement.Parent);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementSimpleStatementTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException528()
{
    StatementSimpleStatement statementSimpleStatement;
    statementSimpleStatement = this.Constructor(";\u2000");
}
    }
}
