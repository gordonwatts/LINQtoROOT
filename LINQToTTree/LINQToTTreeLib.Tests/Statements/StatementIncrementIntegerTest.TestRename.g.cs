using LINQToTTreeLib.Variables.Moles;
using LinqToTTreeInterfacesLib;
using LINQToTTreeLib.Variables;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Statements
{
    public partial class StatementIncrementIntegerTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException65()
{
    SVarInteger sVarInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    sVarInteger = new SVarInteger();
    statementIncrementInteger =
      StatementIncrementIntegerFactory.Create((VarInteger)sVarInteger);
    iStatement =
      this.TestRename(statementIncrementInteger, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException692()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement =
      this.TestRename(statementIncrementInteger, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException486()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement = this.TestRename(statementIncrementInteger, "", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException659()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement = this.TestRename(statementIncrementInteger, "a", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException685()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, 1);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement =
      this.TestRename(statementIncrementInteger, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException752()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement =
      this.TestRename(statementIncrementInteger, "\u0100\0", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementIncrementIntegerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestRenameThrowsArgumentNullException503()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement iStatement;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    iStatement = this.TestRename(statementIncrementInteger, "\0\0", (string)null);
}
    }
}
