using LINQToTTreeLib.Variables;
using LINQToTTreeLib.Statements;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.Tests
{
    public partial class StatementAssignTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TryCombineStatementTestThrowsArgumentNullException267()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    bool b;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    b = this.TryCombineStatementTest(statementAssign, (IStatement)null);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TryCombineStatementTestThrowsNullReferenceException792()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    bool b;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    b = this.TryCombineStatementTest(statementAssign, (IStatement)statementAssign);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
public void TryCombineStatementTest727()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    StatementIncrementInteger statementIncrementInteger;
    bool b;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    b = this.TryCombineStatementTest
            (statementAssign, (IStatement)statementIncrementInteger);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)statementAssign);
    Assert.IsNotNull(statementAssign.ResultVariable);
    Assert.IsNotNull(statementAssign.Expression);
    Assert.IsTrue(object.ReferenceEquals
                      (statementAssign.Expression, statementAssign.ResultVariable));
    Assert.IsNull(statementAssign.Parent);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
public void TryCombineStatementTest72701()
{
    VarInteger varInteger;
    VarInteger varInteger1;
    StatementAssign statementAssign;
    StatementIncrementInteger statementIncrementInteger;
    bool b;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    varInteger1 = VarIntegerFactory.Create(false, 0);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger1);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger1);
    b = this.TryCombineStatementTest
            (statementAssign, (IStatement)statementIncrementInteger);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)statementAssign);
    Assert.IsNotNull(statementAssign.ResultVariable);
    Assert.IsNotNull(statementAssign.Expression);
    Assert.IsNull(statementAssign.Parent);
}
[TestMethod]
[PexGeneratedBy(typeof(StatementAssignTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TryCombineStatementTestThrowsArgumentNullException6()
{
    VarInteger varInteger;
    StatementAssign statementAssign;
    bool b;
    varInteger = VarIntegerFactory.Create(false, -2097152009);
    statementAssign =
      StatementAssignFactory.Create((IVariable)varInteger, (IValue)varInteger);
    b = this.TryCombineStatementTest(statementAssign, (IStatement)null);
}
    }
}
