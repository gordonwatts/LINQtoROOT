using LINQToTTreeLib.Statements;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Variables;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class GeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope495()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[0];
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException87()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, 0);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[1];
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope49501()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, 1);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[0];
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope273()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope204()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    StatementInlineBlock statementInlineBlock;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException515()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope562()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementIncrementInteger;
    iStatements[1] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope872()
{
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    StatementInlineBlock statementInlineBlock;
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementInlineBlock;
    iStatements[1] = (IStatement)statementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)statementIncrementInteger);
}
    }
}
