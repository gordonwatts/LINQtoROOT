using LINQToTTreeLib.Statements;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Variables;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class GeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope497()
{
    StatementInlineBlock statementInlineBlock;
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[0];
    this.TestChangeScope(iStatements, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException611()
{
    StatementInlineBlock statementInlineBlock;
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[1];
    this.TestChangeScope(iStatements, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope884()
{
    StatementInlineBlock statementInlineBlock;
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException635()
{
    StatementInlineBlock statementInlineBlock;
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope70401()
{
    StatementInlineBlock statementInlineBlock;
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementInlineBlock;
    iStatements[1] = (IStatement)statementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope346()
{
    StatementInlineBlock statementInlineBlock;
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement[] iStatements = new IStatement[0];
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IVariable[])null);
    varInteger = VarIntegerFactory.Create(false, 0);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements1 = new IStatement[2];
    iStatements1[0] = (IStatement)statementInlineBlock;
    iStatements1[1] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements1, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope34601()
{
    StatementInlineBlock statementInlineBlock;
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement[] iStatements = new IStatement[0];
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IVariable[])null);
    varInteger = VarIntegerFactory.Create(false, 1);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements1 = new IStatement[2];
    iStatements1[0] = (IStatement)statementInlineBlock;
    iStatements1[1] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements1, (IStatement)statementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope546()
{
    StatementInlineBlock statementInlineBlock;
    VarInteger varInteger;
    StatementIncrementInteger statementIncrementInteger;
    IStatement[] iStatements = new IStatement[0];
    statementInlineBlock =
      StatementInlineBlockFactory.Create(iStatements, (IVariable[])null);
    varInteger = VarIntegerFactory.Create(false, -1311225726);
    statementIncrementInteger = StatementIncrementIntegerFactory.Create(varInteger);
    IStatement[] iStatements1 = new IStatement[2];
    iStatements1[0] = (IStatement)statementInlineBlock;
    iStatements1[1] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements1, (IStatement)statementIncrementInteger);
}
    }
}
