// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using LinqToTTreeInterfacesLib;
using LinqToTTreeInterfacesLib.Moles;
using LINQToTTreeLib.Statements;
using LINQToTTreeLib.Statements.Moles;
using Microsoft.Pex.Framework;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Framework.Moles;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using LINQToTTreeLib.Variables.Moles;
using LINQToTTreeLib.Variables;

namespace LINQToTTreeLib
{
    public partial class GeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope547()
{
    SStatementInlineBlock sStatementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    IStatement[] iStatements = new IStatement[0];
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException433()
{
    SStatementInlineBlock sStatementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    IStatement[] iStatements = new IStatement[1];
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope599()
{
    SStatementInlineBlock sStatementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestChangeScopeThrowsArgumentNullException655()
{
    SStatementInlineBlock sStatementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope656()
{
    SStatementInlineBlock sStatementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    iStatements[1] = (IStatement)sStatementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope726()
{
    SStatementInlineBlock sStatementInlineBlock;
    StatementInlineBlock statementInlineBlock;
    sStatementInlineBlock = new SStatementInlineBlock();
    statementInlineBlock =
      StatementInlineBlockFactory.Create((IStatement[])null, (IVariable[])null);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)statementInlineBlock;
    iStatements[1] = (IStatement)sStatementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope540()
{
    SStatementInlineBlock sStatementInlineBlock;
    SVarInteger sVarInteger;
    SStatementIncrementInteger sStatementIncrementInteger;
    sStatementInlineBlock = new SStatementInlineBlock();
    sVarInteger = new SVarInteger();
    sStatementIncrementInteger =
      new SStatementIncrementInteger((VarInteger)sVarInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    iStatements[1] = (IStatement)sStatementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope54001()
{
    SStatementInlineBlock sStatementInlineBlock;
    VarInteger varInteger;
    SStatementIncrementInteger sStatementIncrementInteger;
    sStatementInlineBlock = new SStatementInlineBlock();
    varInteger = VarIntegerFactory.Create(false, 0);
    sStatementIncrementInteger = new SStatementIncrementInteger(varInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    iStatements[1] = (IStatement)sStatementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope54002()
{
    SStatementInlineBlock sStatementInlineBlock;
    VarInteger varInteger;
    SStatementIncrementInteger sStatementIncrementInteger;
    sStatementInlineBlock = new SStatementInlineBlock();
    varInteger = VarIntegerFactory.Create(false, 1);
    sStatementIncrementInteger = new SStatementIncrementInteger(varInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    iStatements[1] = (IStatement)sStatementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope852()
{
    SStatementInlineBlock sStatementInlineBlock;
    SVarInteger sVarInteger;
    StatementIncrementInteger statementIncrementInteger;
    sStatementInlineBlock = new SStatementInlineBlock();
    sVarInteger = new SVarInteger();
    statementIncrementInteger =
      StatementIncrementIntegerFactory.Create((VarInteger)sVarInteger);
    IStatement[] iStatements = new IStatement[2];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    iStatements[1] = (IStatement)statementIncrementInteger;
    this.TestChangeScope(iStatements, (IStatement)sStatementInlineBlock);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestChangeScope845()
{
    SStatementInlineBlock sStatementInlineBlock;
    SVarInteger sVarInteger;
    SStatementIncrementInteger sStatementIncrementInteger;
    sStatementInlineBlock = new SStatementInlineBlock();
    sVarInteger = new SVarInteger();
    sStatementIncrementInteger =
      new SStatementIncrementInteger((VarInteger)sVarInteger);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)sStatementInlineBlock;
    this.TestChangeScope(iStatements, (IStatement)sStatementIncrementInteger);
}
    }
}
