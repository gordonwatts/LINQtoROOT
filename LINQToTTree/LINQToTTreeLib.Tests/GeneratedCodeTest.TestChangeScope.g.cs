using System;
using LinqToTTreeInterfacesLib;
using LINQToTTreeLib.Statements;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class GeneratedCodeTest
    {
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        [ExpectedException(typeof(ArgumentException))]
        public void TestChangeScopeThrowsArgumentException810()
        {
            StatementInlineBlock statementInlineBlock;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[0];
            this.TestChangeScope(iStatements,
                                 (IStatement)statementInlineBlock, (IStatement)statementInlineBlock);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestChangeScopeThrowsArgumentNullException82()
        {
            StatementInlineBlock statementInlineBlock;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[1];
            this.TestChangeScope(iStatements,
                                 (IStatement)statementInlineBlock, (IStatement)statementInlineBlock);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        [ExpectedException(typeof(ArgumentException))]
        public void TestChangeScopeThrowsArgumentException263()
        {
            StatementInlineBlock statementInlineBlock;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[1];
            iStatements[0] = (IStatement)statementInlineBlock;
            this.TestChangeScope(iStatements,
                                 (IStatement)statementInlineBlock, (IStatement)statementInlineBlock);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        public void TestChangeScopeThrowsArgumentException532()
        {
            StatementInlineBlockTest.dummyVarName dummyVarName;
            StatementInlineBlock statementInlineBlock;
            StatementInlineBlock statementInlineBlock1;
            dummyVarName =
              new StatementInlineBlockTest.dummyVarName((string)null, (Type)null);
            dummyVarName.InitialValue = (IValue)null;
            dummyVarName.Declare = false;
            dummyVarName.RawValue = (string)null;
            IDeclaredParameter[] iDeclaredParameters = new IDeclaredParameter[1];
            iDeclaredParameters[0] = (IDeclaredParameter)dummyVarName;
            statementInlineBlock =
              StatementInlineBlockFactory.Create((IStatement[])null, iDeclaredParameters);
            IStatement[] iStatements = new IStatement[0];
            statementInlineBlock1 =
              StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
            IStatement[] iStatements1 = new IStatement[1];
            StatementInlineBlock statementInlineBlock2 = new StatementInlineBlock();
            iStatements1[0] = (IStatement)statementInlineBlock1;
            this.TestChangeScope(iStatements1,
                                 (IStatement)statementInlineBlock, (IStatement)statementInlineBlock2);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        [ExpectedException(typeof(ArgumentNullException))]
        public void TestChangeScopeThrowsArgumentNullException702()
        {
            StatementInlineBlock statementInlineBlock;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[2];
            iStatements[0] = (IStatement)statementInlineBlock;
            this.TestChangeScope(iStatements,
                                 (IStatement)statementInlineBlock, (IStatement)statementInlineBlock);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        [ExpectedException(typeof(ArgumentException))]
        public void TestChangeScopeThrowsArgumentException943()
        {
            StatementInlineBlock statementInlineBlock;
            StatementInlineBlock statementInlineBlock1;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            statementInlineBlock1 = StatementInlineBlockFactory.Create
                                        ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[2];
            StatementInlineBlock statementInlineBlock2 = new StatementInlineBlock();
            iStatements[0] = (IStatement)statementInlineBlock1;
            iStatements[1] = (IStatement)statementInlineBlock;
            this.TestChangeScope(iStatements,
                                 (IStatement)statementInlineBlock2, (IStatement)statementInlineBlock2);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(GeneratedCodeTest))]
        public void TestChangeScope261()
        {
            StatementInlineBlock statementInlineBlock;
            StatementInlineBlock statementInlineBlock1;
            StatementInlineBlock statementInlineBlock2;
            statementInlineBlock = StatementInlineBlockFactory.Create
                                       ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements = new IStatement[1];
            iStatements[0] = (IStatement)statementInlineBlock;
            statementInlineBlock1 =
              StatementInlineBlockFactory.Create(iStatements, (IDeclaredParameter[])null);
            statementInlineBlock2 = StatementInlineBlockFactory.Create
                                        ((IStatement[])null, (IDeclaredParameter[])null);
            IStatement[] iStatements1 = new IStatement[0];
            this.TestChangeScope(iStatements1,
                                 (IStatement)statementInlineBlock2, (IStatement)statementInlineBlock1);
        }
    }
}
