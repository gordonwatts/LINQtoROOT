// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using LinqToTTreeInterfacesLib;
using ROOTNET.Interface;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using ROOTNET;
using Microsoft.Pex.Framework.Pointers;
using LINQToTTreeLib.Variables;
using Microsoft.ExtendedReflection.DataAccess;

namespace LINQToTTreeLib.Variables.Savers
{
    public partial class SaveVarObjectTest
    {
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void LoadResultThrowsArgumentNullException316()
{
    int i;
    SaveVarObject s0 = new SaveVarObject();
    i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)null);
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[PexRaisedException(typeof(NullReferenceException))]
public unsafe void LoadResultThrowsNullReferenceException342()
{
    /* 
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTQClass nTQClass;
      int i;
      uint @base = 475004928u;
      PexPointerSpace.Initialize(new UIntPtr(@base), new UIntPtr(65536u));
      nTQClass = new NTQClass(unchecked((global::TQClass*)0));
      disposables.Add((IDisposable)nTQClass);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTQClass);
      disposables.Dispose();
    }
    PexPointerSpace.Validate();
    */
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[ExpectedException(typeof(InvalidOperationException))]
public unsafe void LoadResultThrowsInvalidOperationException43()
{
    /* 
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTQClass nTQClass;
      VarInteger varInteger;
      int i;
      uint @base = 475004928u;
      PexPointerSpace.Initialize(new UIntPtr(@base), new UIntPtr(65536u));
      nTQClass = new NTQClass(unchecked((global::TQClass*)475037757));
      disposables.Add((IDisposable)nTQClass);
      varInteger = new VarInteger();
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)varInteger, (NTObject)nTQClass);
      disposables.Dispose();
    }
    PexPointerSpace.Validate();
    */
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[ExpectedException(typeof(ArgumentException))]
public unsafe void LoadResultThrowsArgumentException487()
{
    /* 
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTPluginManager nTPluginManager;
      int i;
      uint @base = 475004928u;
      PexPointerSpace.Initialize(new UIntPtr(@base), new UIntPtr(65536u));
      nTPluginManager =
        new NTPluginManager(unchecked((global::TPluginManager*)475037757));
      disposables.Add((IDisposable)nTPluginManager);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTPluginManager);
      disposables.Dispose();
    }
    PexPointerSpace.Validate();
    */
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[ExpectedException(typeof(ArgumentException))]
public void LoadResultThrowsArgumentException988()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTQConnection nTQConnection;
      int i;
      nTQConnection = new NTQConnection();
      disposables.Add((IDisposable)nTQConnection);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTQConnection);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void LoadResultThrowsNullReferenceException323()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTGuiFactory nTGuiFactory;
      int i;
      nTGuiFactory = new NTGuiFactory();
      disposables.Add((IDisposable)nTGuiFactory);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTGuiFactory);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void LoadResultThrowsNullReferenceException986()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTMacro nTMacro;
      int i;
      nTMacro = new NTMacro();
      disposables.Add((IDisposable)nTMacro);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTMacro);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[PexRaisedException(typeof(TermDestructionException))]
public void LoadResultThrowsTermDestructionException615()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTMacro nTMacro;
      VarInteger varInteger;
      int i;
      nTMacro = new NTMacro();
      disposables.Add((IDisposable)nTMacro);
      varInteger = new VarInteger();
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)varInteger, (NTObject)nTMacro);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(SaveVarObjectTest))]
[ExpectedException(typeof(ArgumentException))]
public void LoadResultThrowsArgumentException708()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      NTUri nTUri;
      int i;
      nTUri = new NTUri();
      disposables.Add((IDisposable)nTUri);
      SaveVarObject s0 = new SaveVarObject();
      i = this.LoadResult<int>(s0, (IVariable)null, (NTObject)nTUri);
      disposables.Dispose();
    }
}
    }
}
