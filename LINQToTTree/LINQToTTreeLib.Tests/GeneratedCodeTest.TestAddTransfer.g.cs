using LINQToTTreeLib.Variables;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Statements;
using Microsoft.ExtendedReflection.DataAccess;
using LINQToTTreeLib.Variables.Moles;
using LINQToTTreeLib.Statements.Moles;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class GeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException588()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void TestAddTransferThrowsArgumentException479()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    object s0 = new object();
    this.TestAddTransfer(generatedCode, (string)null, s0);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException422()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[1];
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, ss);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void TestAddTransferThrowsArgumentException68()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    object s0 = new object();
    this.TestAddTransfer(generatedCode, "", s0);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestAddTransfer439()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    object s0 = new object();
    this.TestAddTransfer(generatedCode, "\0", s0);
    Assert.IsNotNull((object)generatedCode);
    Assert.AreEqual<int>(1, generatedCode.Depth);
    Assert.IsNotNull(generatedCode.ResultValue);
    Assert.IsNotNull(generatedCode.CodeBody);
    Assert.IsNotNull(generatedCode.VariablesToTransfer);
    Assert.IsNotNull(generatedCode.IncludeFiles);
    Assert.IsNotNull(generatedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException281()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[1];
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  ss, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException290()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[1];
    ss[0] = "\0";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException592()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    varInteger = VarIntegerFactory.Create(false, 0);
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException258()
{
    VarInteger varInteger;
    GeneratedCode generatedCode;
    varInteger = VarIntegerFactory.Create(false, 1);
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)varInteger, (IStatement[])null, 
                                  (string[])null, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException747()
{
    SVarInteger sVarInteger;
    SStatementIncrementInteger sStatementIncrementInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    sStatementIncrementInteger =
      new SStatementIncrementInteger((VarInteger)sVarInteger);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)sStatementIncrementInteger;
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, iStatements, 
                                  (string[])null, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException356()
{
    SVarInteger sVarInteger;
    StatementIncrementInteger statementIncrementInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    statementIncrementInteger =
      StatementIncrementIntegerFactory.Create((VarInteger)sVarInteger);
    IStatement[] iStatements = new IStatement[1];
    iStatements[0] = (IStatement)statementIncrementInteger;
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, iStatements, 
                                  (string[])null, (string[])null, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException398()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[2];
    ss[0] = "\u0100";
    ss[1] = "\u0100";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException754()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[2];
    ss[0] = "\u0101";
    ss[1] = "\u0100";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    this.TestAddTransfer(generatedCode, "\u0100", (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestAddTransfer361()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[2];
    ss[0] = "\uaacc";
    ss[1] = "\u4a8f";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    object s0 = new object();
    this.TestAddTransfer(generatedCode, "\u4a8f", s0);
    Assert.IsNotNull((object)generatedCode);
    Assert.AreEqual<int>(1, generatedCode.Depth);
    Assert.IsNotNull(generatedCode.ResultValue);
    Assert.IsNotNull(generatedCode.CodeBody);
    Assert.IsNotNull(generatedCode.VariablesToTransfer);
    Assert.IsNotNull(generatedCode.IncludeFiles);
    Assert.IsNotNull(generatedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void TestAddTransferThrowsArgumentNullException107()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[2];
    ss[0] = "\ub7a4";
    ss[1] = "\u35c7";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    this.TestAddTransfer(generatedCode, (string)null, (object)null);
}
[TestMethod]
[PexGeneratedBy(typeof(GeneratedCodeTest))]
public void TestAddTransfer68()
{
    SVarInteger sVarInteger;
    GeneratedCode generatedCode;
    sVarInteger = new SVarInteger();
    string[] ss = new string[2];
    ss[0] = "\u76ea";
    ss[1] = "\u4bad";
    generatedCode =
      GeneratedCodeFactory.Create((IVariable)sVarInteger, (IStatement[])null, 
                                  (string[])null, ss, (string[])null);
    object s0 = new object();
    this.TestAddTransfer(generatedCode, "\u4a70", s0);
    Assert.IsNotNull((object)generatedCode);
    Assert.AreEqual<int>(1, generatedCode.Depth);
    Assert.IsNotNull(generatedCode.ResultValue);
    Assert.IsNotNull(generatedCode.CodeBody);
    Assert.IsNotNull(generatedCode.VariablesToTransfer);
    Assert.IsNotNull(generatedCode.IncludeFiles);
    Assert.IsNotNull(generatedCode.ReferencedLeafNames);
}
    }
}
