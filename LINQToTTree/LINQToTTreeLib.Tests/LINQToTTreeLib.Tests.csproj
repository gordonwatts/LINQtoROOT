<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B4D4BD10-53CD-42BE-9174-876F117D245C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LINQToTTreeLib.Tests</RootNamespace>
    <AssemblyName>LINQToTTreeLib.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
    <CodeAnalysisFailOnMissingRules>false</CodeAnalysisFailOnMissingRules>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
    <CodeAnalysisFailOnMissingRules>false</CodeAnalysisFailOnMissingRules>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="libCoreWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libCoreWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libGrafWrapper">
      <HintPath>..\packages\ROOTNET-Tree-v5.30.01.win32.vc10.2.2\lib\net40\libGrafWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libHistWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libHistWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libMathCoreWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libMathCoreWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libNetWrapper">
      <HintPath>..\packages\ROOTNET-Tree-v5.30.01.win32.vc10.2.2\lib\net40\libNetWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libPhysicsWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libPhysicsWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libRIOWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libRIOWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libThreadWrapper">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\libThreadWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libTreePlayerWrapper">
      <HintPath>..\packages\ROOTNET-Tree-v5.30.01.win32.vc10.2.2\lib\net40\libTreePlayerWrapper.dll</HintPath>
    </Reference>
    <Reference Include="libTreeWrapper">
      <HintPath>..\packages\ROOTNET-Tree-v5.30.01.win32.vc10.2.2\lib\net40\libTreeWrapper.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.ExtendedReflection, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" />
    <Reference Include="Microsoft.Moles.Framework, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
    <Reference Include="Microsoft.Pex.Framework, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
    <Reference Include="Microsoft.Pex.Linq, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.VisualC" />
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="NVelocity, Version=1.0.3.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <HintPath>..\packages\NVelocity.1.0.3\lib\NVelocity.dll</HintPath>
    </Reference>
    <Reference Include="Remotion.Linq, Version=1.13.102.2, Culture=neutral, PublicKeyToken=fee00910d6e5f53b, processorArchitecture=MSIL">
      <HintPath>..\Libraries\Remotion\Remotion.Linq.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="WrapperPlumbingLibrary">
      <HintPath>..\packages\ROOTNET-Core-v5.30.01.win32.vc10.2.2\lib\net40\WrapperPlumbingLibrary.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LinqToTTreeInterfacesLib\LinqToTTreeInterfacesLib.csproj">
      <Project>{802DBA06-8779-4024-A899-4D0293F75695}</Project>
      <Name>LinqToTTreeInterfacesLib</Name>
    </ProjectReference>
    <ProjectReference Include="..\LINQToTTreeLib\LINQToTTreeLib.csproj">
      <Project>{A1A955AD-BC56-4413-92BC-581C35A78522}</Project>
      <Name>LINQToTTreeLib</Name>
    </ProjectReference>
    <ProjectReference Include="..\TTreeDataModel\TTreeDataModel.csproj">
      <Project>{3F0367B8-C970-4134-8FC6-944400C00F71}</Project>
      <Name>TTreeDataModel</Name>
    </ProjectReference>
    <ProjectReference Include="..\TTreeParserCPP.Tests\TTreeParserCPP.Tests.vcxproj">
      <Project>{967E302F-C718-44B4-A6C5-93B87C786E57}</Project>
      <Name>TTreeParserCPP.Tests</Name>
    </ProjectReference>
    <ProjectReference Include="..\TTreeParser\TTreeParser.csproj">
      <Project>{69E634CA-6F0D-4363-9522-F19896E27E02}</Project>
      <Name>TTreeParser</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CodeContextTest.Add.g.cs">
      <DependentUpon>CodeContextTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CodeContextTest.Constructor.g.cs">
      <DependentUpon>CodeContextTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CodeContextTest.cs" />
    <Compile Include="CodeContextTest.GetReplacement.g.cs">
      <DependentUpon>CodeContextTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CodeContextTest.TestRoundTrip.g.cs">
      <DependentUpon>CodeContextTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.AddGeneratedCode.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.AddIncludeFile.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.CheckAddIncludeFiles.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.CheckAddSameVariableNamesToTransfer.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.Constructor.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.cs" />
    <Compile Include="CombinedGeneratedCodeTest.IncludeFilesGet.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.ResultValuesGet.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CombinedGeneratedCodeTest.VariablesToTransferGet.g.cs">
      <DependentUpon>CombinedGeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CPPTranslatorTest.Constructor.g.cs">
      <DependentUpon>CPPTranslatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CPPTranslatorTest.cs" />
    <Compile Include="CPPTranslatorTest.IncludeFilesGet.g.cs">
      <DependentUpon>CPPTranslatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CPPTranslatorTest.TranslateGeneratedCode.g.cs">
      <DependentUpon>CPPTranslatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DummyQueryExectuor.cs" />
    <Compile Include="Expressions\ExpressionStringConverterTest.cs" />
    <Compile Include="Expressions\ParameterReplacementExpressionVisitorTest.cs" />
    <Compile Include="Expressions\ExpressionVisitorMethodCallTests.cs" />
    <Compile Include="Expressions\ExpressionVisitorTest.cs" />
    <Compile Include="Expressions\ExpressionVisitorTest.GetExpression.g.cs">
      <DependentUpon>ExpressionVisitorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expressions\ExpressionVisitorTest.TestConstantExpression.g.cs">
      <DependentUpon>ExpressionVisitorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Factories\ArrayInfoVectorFactory.cs" />
    <Compile Include="Factories\CodeOptimizerTestFactory.cs" />
    <Compile Include="Factories\CombinedGeneratedCodeFactory.cs" />
    <Compile Include="Factories\ConstantExpressionFactory.cs" />
    <Compile Include="Factories\CPPTranslatorFactory.cs" />
    <Compile Include="Factories\GeneratedCodeFactory.cs" />
    <Compile Include="Factories\ICodeOptimizerFactory.cs" />
    <Compile Include="Factories\MethodCallExpressionFactory.cs" />
    <Compile Include="Factories\NTObjectFactory.cs" />
    <Compile Include="Factories\SkipResultOperatorFactory.cs" />
    <Compile Include="Factories\StatementAnyAllDetectorFactory.cs" />
    <Compile Include="Factories\StatementAssignFactory.cs" />
    <Compile Include="Factories\StatementCheckLoopPairwiseFactory.cs" />
    <Compile Include="Factories\StatementFilterFactory.cs" />
    <Compile Include="Factories\StatementIfOnCountFactory.cs" />
    <Compile Include="Factories\StatementIncrementIntegerFactory.cs" />
    <Compile Include="Factories\StatementInlineBlockFactory.cs" />
    <Compile Include="Factories\StatementLoopOverGoodFactory.cs" />
    <Compile Include="Factories\StatementMinMaxTestFactory.cs" />
    <Compile Include="Factories\StatementPairLoopFactory.cs" />
    <Compile Include="Factories\StatementRecordIndiciesFactory.cs" />
    <Compile Include="Factories\StatementRecordValueFactory.cs" />
    <Compile Include="Factories\StatementSimpleStatementFactory.cs" />
    <Compile Include="Factories\TakeResultOperatorFactory.cs" />
    <Compile Include="Factories\TypeHandlerReplacementCallFactory.cs" />
    <Compile Include="Factories\UnaryExpressionFactory.cs" />
    <Compile Include="Factories\VarArrayFactory.cs" />
    <Compile Include="Factories\VarIntegerFactory.cs" />
    <Compile Include="Factories\VarSimpleFactory.cs" />
    <Compile Include="FileUtilsTest.cs" />
    <Compile Include="FileUtilsTest.MakeSureFileIsRight.g.cs">
      <DependentUpon>FileUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FileUtilsTest.MakeSureFileNotUpdated.g.cs">
      <DependentUpon>FileUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FileUtilsTest.WriteTextIfNotDuplicate.g.cs">
      <DependentUpon>FileUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FutureResultOperatorsTest.cs" />
    <Compile Include="FutureResultOperatorsTest.FutureCount.g.cs">
      <DependentUpon>FutureResultOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FutureValueTTest.Constructor01.g.cs">
      <DependentUpon>FutureValueTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FutureValueTTest.cs" />
    <Compile Include="FutureValueTTest.SetValue.g.cs">
      <DependentUpon>FutureValueTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FutureValueTTest.ValueGet.g.cs">
      <DependentUpon>FutureValueTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.Add.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.AddCompound.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.AddCompoundStatementTest.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.Constructor.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.cs" />
    <Compile Include="GeneratedCodeTest.LookAtStatements.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.Pop.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.SetResult.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.TestAddTransfer.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="GeneratedCodeTest.TestChangeScope.g.cs">
      <DependentUpon>GeneratedCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="MEFUtilities.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\PexAssemblyInfo.cs" />
    <Compile Include="QueriableDummy.cs" />
    <Compile Include="QueryResultCacheTest.CacheItem.g.cs">
      <DependentUpon>QueryResultCacheTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QueryResultCacheTest.cs" />
    <Compile Include="QueryResultCacheTest.Lookup.g.cs">
      <DependentUpon>QueryResultCacheTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QueryVisitors\FormattingQueryVisitorTest.cs" />
    <Compile Include="QueryVisitors\FormattingQueryVisitorTest.Format.g.cs">
      <DependentUpon>FormattingQueryVisitorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QueryVisitors\FormattingQueryVisitorTest.TestQueryDoesntCrash.g.cs">
      <DependentUpon>FormattingQueryVisitorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QueryVisitorTest.cs" />
    <Compile Include="QVResultOperatorsTest.Constructor.g.cs">
      <DependentUpon>QVResultOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QVResultOperatorsTest.cs" />
    <Compile Include="QVResultOperatorsTest.TestForGoodReturn.g.cs">
      <DependentUpon>QVResultOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QVResultOperatorsTest.TestLookupNothing.g.cs">
      <DependentUpon>QVResultOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="QVResultOperatorsTest.TestLookupTwice.g.cs">
      <DependentUpon>QVResultOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROAggregateTest.CanHandle.g.cs">
      <DependentUpon>ROAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROAggregateTest.cs" />
    <Compile Include="ResultOperators\ROAnyAllTest.CanHandle.g.cs">
      <DependentUpon>ROAnyAllTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROAnyAllTest.cs" />
    <Compile Include="ResultOperators\ROAnyAllTest.ProcessResultOperator.g.cs">
      <DependentUpon>ROAnyAllTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROFirstLastTest.CanHandle.g.cs">
      <DependentUpon>ROFirstLastTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROFirstLastTest.cs" />
    <Compile Include="ResultOperators\ROFirstLastTest.ProcessResultOperator.g.cs">
      <DependentUpon>ROFirstLastTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROMinMaxTest.CanHandle.g.cs">
      <DependentUpon>ROMinMaxTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROMinMaxTest.cs" />
    <Compile Include="ResultOperators\ROMinMaxTest.ProcessResultOperator.g.cs">
      <DependentUpon>ROMinMaxTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROPairWiseAllTest.CanHandle.g.cs">
      <DependentUpon>t_ROPairWiseAll.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROPairWiseAllTest.ProcessResultOperator.g.cs">
      <DependentUpon>t_ROPairWiseAll.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROUniqueCombinationsTest.CanHandle.g.cs">
      <DependentUpon>ROUniqueCombinationsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROUniqueCombinationsTest.cs" />
    <Compile Include="ResultOperators\ROUniqueCombinationsTest.ProcessResultOperator.g.cs">
      <DependentUpon>ROUniqueCombinationsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\TakeSkipOperatorsTest.CanHandle.g.cs">
      <DependentUpon>TakeSkipOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\TakeSkipOperatorsTest.cs" />
    <Compile Include="ResultOperators\TakeSkipOperatorsTest.ProcessResultOperator.g.cs">
      <DependentUpon>TakeSkipOperatorsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\TestCount.cs" />
    <Compile Include="ResultOperators\ROCountTest.CanHandle.g.cs">
      <DependentUpon>ROCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\ROCountTest.cs" />
    <Compile Include="ResultOperators\ROCountTest.ProcessResultOperator.g.cs">
      <DependentUpon>ROCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.CodeItUpTest.g.cs">
      <DependentUpon>StatementAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.cs" />
    <Compile Include="Statements\IStatementCombineTest.cs" />
    <Compile Include="Statements\IStatementCombineTest.TestEquiv.g.cs">
      <DependentUpon>IStatementCombineTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\IStatementCombineTest.TestRename.g.cs">
      <DependentUpon>IStatementCombineTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.IsSameStatementTest.g.cs">
      <DependentUpon>StatementAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.RenameVariableTest.g.cs">
      <DependentUpon>StatementAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.StatementAggregateConstructorTest.g.cs">
      <DependentUpon>StatementAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAggregateTest.TryCombineStatementTest.g.cs">
      <DependentUpon>StatementAggregateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAssignTest.CodeItUpTest.g.cs">
      <DependentUpon>StatementAssignTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAssignTest.IsSameStatementTest.g.cs">
      <DependentUpon>StatementAssignTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAssignTest.RenameVariableTest.g.cs">
      <DependentUpon>StatementAssignTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAssignTest.StatementAssignConstructorTest.g.cs">
      <DependentUpon>StatementAssignTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementAssignTest.TryCombineStatementTest.g.cs">
      <DependentUpon>StatementAssignTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementFilterTest.CodeItUp.g.cs">
      <DependentUpon>StatementFilterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementFilterTest.Constructor.g.cs">
      <DependentUpon>StatementFilterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementFilterTest.cs" />
    <Compile Include="Statements\StatementFilterTest.TestEquiv.g.cs">
      <DependentUpon>StatementFilterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementFilterTest.TestRename.g.cs">
      <DependentUpon>StatementFilterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementFilterTest.TestTryCombine.g.cs">
      <DependentUpon>StatementFilterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIfOnCountTest.CodeItUp.g.cs">
      <DependentUpon>StatementIfOnCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIfOnCountTest.Constructor.g.cs">
      <DependentUpon>StatementIfOnCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIfOnCountTest.cs" />
    <Compile Include="Statements\StatementIfOnCountTest.TestEquiv.g.cs">
      <DependentUpon>StatementIfOnCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIfOnCountTest.TestTryCombine.g.cs">
      <DependentUpon>StatementIfOnCountTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIncrementIntegerTest.Constructor.g.cs">
      <DependentUpon>StatementIncrementIntegerTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIncrementIntegerTest.cs" />
    <Compile Include="Statements\StatementIncrementIntegerTest.TestEquiv.g.cs">
      <DependentUpon>StatementIncrementIntegerTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIncrementIntegerTest.TestRename.g.cs">
      <DependentUpon>StatementIncrementIntegerTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementIncrementIntegerTest.TestTryCombine.g.cs">
      <DependentUpon>StatementIncrementIntegerTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementInlineBlockTest.Add.g.cs">
      <DependentUpon>StatementInlineBlockTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementInlineBlockTest.Constructor.g.cs">
      <DependentUpon>StatementInlineBlockTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementInlineBlockTest.cs" />
    <Compile Include="Statements\StatementInlineBlockTest.StatementsGet.g.cs">
      <DependentUpon>StatementInlineBlockTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementInlineBlockTest.TestAddSingleStatement.g.cs">
      <DependentUpon>StatementInlineBlockTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementInlineBlockTest.TestSimpleVariableDoubleInsert.g.cs">
      <DependentUpon>StatementInlineBlockTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementLoopOverGoodTest.CodeItUp.g.cs">
      <DependentUpon>StatementLoopOverGoodTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementLoopOverGoodTest.Constructor.g.cs">
      <DependentUpon>StatementLoopOverGoodTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementLoopOverGoodTest.cs" />
    <Compile Include="Statements\StatementLoopOverGoodTest.TestEquiv.g.cs">
      <DependentUpon>StatementLoopOverGoodTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementLoopOverGoodTest.TestTryCombine.g.cs">
      <DependentUpon>StatementLoopOverGoodTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementPairLoopTest.cs" />
    <Compile Include="Statements\StatementPairLoopTest.StatementPairLoopCtor.g.cs">
      <DependentUpon>StatementPairLoopTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementRecordIndiciesTest.CodeItUpTest.g.cs">
      <DependentUpon>StatementRecordIndiciesTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementRecordIndiciesTest.IsSameStatementTest.g.cs">
      <DependentUpon>StatementRecordIndiciesTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementRecordIndiciesTest.RenameVariableTest.g.cs">
      <DependentUpon>StatementRecordIndiciesTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementRecordIndiciesTest.StatementRecordIndiciesConstructorTest.g.cs">
      <DependentUpon>StatementRecordIndiciesTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementRecordIndiciesTest.TryCombineStatementTest.g.cs">
      <DependentUpon>StatementRecordIndiciesTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementSimpleStatementTest.CodeItUp.g.cs">
      <DependentUpon>StatementSimpleStatementTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementSimpleStatementTest.Constructor.g.cs">
      <DependentUpon>StatementSimpleStatementTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementSimpleStatementTest.cs" />
    <Compile Include="Statements\StatementSimpleStatementTest.TestRename.g.cs">
      <DependentUpon>StatementSimpleStatementTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementSimpleStatementTest.TestTryCombine.g.cs">
      <DependentUpon>StatementSimpleStatementTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\StatementVectorLoopTest.cs" />
    <Compile Include="Statements\TestStatemenRecordValue.TestCodeItUp.g.cs">
      <DependentUpon>StatemenRecordValueTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatemenRecordValue.TestRenameVariable.g.cs">
      <DependentUpon>StatemenRecordValueTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatemenRecordValue.TestTryCombineStatement.g.cs">
      <DependentUpon>StatemenRecordValueTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatementAnyAllDetector.TestCodeItUp.g.cs">
      <DependentUpon>StatementAnyAllDetectorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatementAnyAllDetector.TestRenameVariable.g.cs">
      <DependentUpon>StatementAnyAllDetectorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatementAnyAllDetector.TestTryCombineStatement.g.cs">
      <DependentUpon>StatementAnyAllDetectorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\TestStatementCheckLoopPairwise.TestStatementCheckLoopPairwiseConstructor.g.cs">
      <DependentUpon>StatementCheckLoopPairwiseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Statements\Utils.cs" />
    <Compile Include="TestQueriesGreaterLevels.cs" />
    <Compile Include="TestQueriesTopLevel.cs" />
    <Compile Include="TestUtils.cs" />
    <Compile Include="TTreeExecutorCombinationTests.cs" />
    <Compile Include="TTreeQueryExecutorTest.Constructor.g.cs">
      <DependentUpon>TTreeQueryExecutorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TTreeQueryExecutorTest.cs" />
    <Compile Include="TypeHandlerHelpersTest.cs" />
    <Compile Include="TypeHandlerHelpersTest.ProcessConstantReference.g.cs">
      <DependentUpon>TypeHandlerHelpersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlerHelpersTest.ProcessMethodCall.g.cs">
      <DependentUpon>TypeHandlerHelpersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\CPPCode\TypeHandlerCPPCodeTest.CanHandle.g.cs">
      <DependentUpon>TypeHandlerCPPCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\CPPCode\TypeHandlerCPPCodeTest.cs" />
    <Compile Include="TypeHandlers\CPPCode\TypeHandlerCPPCodeTest.ProcessConstantReference.g.cs">
      <DependentUpon>TypeHandlerCPPCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\CPPCode\TypeHandlerCPPCodeTest.ProcessMethodCall.g.cs">
      <DependentUpon>TypeHandlerCPPCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\CPPCode\TypeHandlerCPPCodeTest.ProcessNew.g.cs">
      <DependentUpon>TypeHandlerCPPCodeTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\ReplacementMethodCalls\TypeHandlerReplacementCallTest.CanHandle.g.cs">
      <DependentUpon>TypeHandlerReplacementCallTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\ReplacementMethodCalls\TypeHandlerReplacementCallTest.cs" />
    <Compile Include="TypeHandlers\ReplacementMethodCalls\TypeHandlerReplacementCallTest.ProcessConstantReference.g.cs">
      <DependentUpon>TypeHandlerReplacementCallTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\ROOT\ROOTObjectCopiedValueTest.cs" />
    <Compile Include="TypeHandlers\ROOT\TypeHanlderROOTTest.CanHandle.g.cs">
      <DependentUpon>TypeHanlderROOTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\ROOT\TypeHanlderROOTTest.cs" />
    <Compile Include="TypeHandlers\ROOT\TypeHanlderROOTTest.ProcessConstantReference.g.cs">
      <DependentUpon>TypeHanlderROOTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\ROOT\TypeHanlderROOTTest.ProcessNew.g.cs">
      <DependentUpon>TypeHanlderROOTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\TypeHandlerCacheTest.cs" />
    <Compile Include="TypeHandlers\TypeHandlerCacheTest.ProcessConstantReference.g.cs">
      <DependentUpon>TypeHandlerCacheTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeHandlers\TypeHandlerCacheTest.ProcessMethodCall.g.cs">
      <DependentUpon>TypeHandlerCacheTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expressions\t_ArrayExpressionParser.cs" />
    <Compile Include="Expressions\t_ArrayInfoVector.cs" />
    <Compile Include="Expressions\t_TranslatingExpressionVisitor.cs" />
    <Compile Include="TypeHandlers\TypeHandlerCacheTest.ProcessNew.g.cs">
      <DependentUpon>TypeHandlerCacheTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ResultOperators\t_ROPairWiseAll.cs" />
    <Compile Include="Statements\StatementRecordIndiciesTest.cs" />
    <Compile Include="Statements\StatementAssignTest.cs" />
    <Compile Include="Statements\StatementCheckLoopPairwiseTest.cs" />
    <Compile Include="Statements\StatementAnyAllDetectorTest.cs" />
    <Compile Include="Statements\StatemenRecordValueTest.cs" />
    <Compile Include="Utils\ExpressionUtilitiesTest.TestApply.g.cs">
      <DependentUpon>t_ExpressionUtilities.cs</DependentUpon>
    </Compile>
    <Compile Include="Utils\t_ExpressionUtilities.cs" />
    <Compile Include="t_TypeDefTranslator.cs" />
    <Compile Include="VariableSaveManagers.cs" />
    <Compile Include="Variables\Savers\SaveVarObjectTest.cs" />
    <Compile Include="Variables\Savers\SaveVarObjectTest.IncludeFiles.g.cs">
      <DependentUpon>SaveVarObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\Savers\SaveVarObjectTest.LoadResult.g.cs">
      <DependentUpon>SaveVarObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\Savers\SaveVarObjectTest.SaveToFile.g.cs">
      <DependentUpon>SaveVarObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\ValSimpleTest.Constructor.g.cs">
      <DependentUpon>ValSimpleTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\ValSimpleTest.Constructor2.g.cs">
      <DependentUpon>ValSimpleTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\ValSimpleTest.cs" />
    <Compile Include="Variables\ValSimpleTest.TestCTorWithType.g.cs">
      <DependentUpon>ValSimpleTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarObjectTest.Constructor.g.cs">
      <DependentUpon>VarObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarObjectTest.cs" />
    <Compile Include="Variables\VarSimpleTest.Constructor.g.cs">
      <DependentUpon>VarSimpleTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarSimpleTest.cs" />
    <Compile Include="Variables\VarUtilsTest.AsCastString.g.cs">
      <DependentUpon>VarUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarUtilsTest.AsCPPType.g.cs">
      <DependentUpon>VarUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarUtilsTest.CastToType.g.cs">
      <DependentUpon>VarUtilsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Variables\VarUtilsTest.cs" />
    <Compile Include="Variables\VarUtilsTest.IsPointerType.g.cs">
      <DependentUpon>VarUtilsTest.cs</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>