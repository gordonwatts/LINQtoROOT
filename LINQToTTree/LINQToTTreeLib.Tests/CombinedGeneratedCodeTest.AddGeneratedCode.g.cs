using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Variables;
using LINQToTTreeLib.Statements;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class CombinedGeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode352()
{
    CombinedGeneratedCode combinedGeneratedCode;
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException13()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    ss[0] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                (ss, (string[])null, (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException568()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35201()
{
    CombinedGeneratedCode combinedGeneratedCode;
    CombinedGeneratedCode combinedGeneratedCode1;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    combinedGeneratedCode1 =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode1, (IExecutableCode)combinedGeneratedCode);
    Assert.IsNotNull((object)combinedGeneratedCode1);
    Assert.IsNotNull(combinedGeneratedCode1.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode1.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode1.IncludeFiles);
    Assert.IsNull(combinedGeneratedCode1.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException152()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[2];
    ss[1] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35202()
{
    CombinedGeneratedCode combinedGeneratedCode;
    CombinedGeneratedCode combinedGeneratedCode1;
    string[] ss = new string[2];
    ss[1] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    combinedGeneratedCode1 =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode1, (IExecutableCode)combinedGeneratedCode);
    Assert.IsNotNull((object)combinedGeneratedCode1);
    Assert.IsNotNull(combinedGeneratedCode1.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode1.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode1.IncludeFiles);
    Assert.IsNull(combinedGeneratedCode1.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35203()
{
    CombinedGeneratedCode combinedGeneratedCode;
    CombinedGeneratedCode combinedGeneratedCode1;
    string[] ss = new string[1];
    ss[0] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                (ss, (string[])null, (string[])null, (IBookingStatementBlock)null);
    combinedGeneratedCode1 =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode1, (IExecutableCode)combinedGeneratedCode);
    Assert.IsNotNull((object)combinedGeneratedCode1);
    Assert.IsNotNull(combinedGeneratedCode1.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode1.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode1.IncludeFiles);
    Assert.IsNull(combinedGeneratedCode1.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException356()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[3];
    ss[1] = "\0";
    ss[2] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException18()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[3];
    ss[1] = "\ua0a2\u20a2";
    ss[2] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException341()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[3];
    ss[1] = "\uca63\ub1db";
    ss[2] = "\u8356\u4584\u78c4\u0134";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException220()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[4];
    ss[0] = "\0\0";
    ss[1] = "\0\0\0";
    ss[2] = "\0";
    ss[3] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35204()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, 0);
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, (string[])null, (string[])null);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35205()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss1 = new string[1];
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, ss1, (string[])null);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35206()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, 1);
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, (string[])null, (string[])null);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35207()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss1 = new string[1];
    ss1[0] = "\0";
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, (string[])null, ss1);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35208()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss1 = new string[2];
    ss1[0] = "\u0089\u008d\u0089";
    ss1[1] = "\u008a\u0089\u008a";
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, (string[])null, ss1);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35209()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss1 = new string[3];
    ss1[0] = "\u008a\u008d\u008d";
    ss1[1] = "\u0089\u0089\u0089";
    ss1[2] = "\u0089\u0089\u0089";
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, (string[])null, ss1);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35210()
{
    CombinedGeneratedCode combinedGeneratedCode;
    VarInteger varInteger;
    GeneratedCode generatedCode;
    string[] ss = new string[0];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    varInteger = VarIntegerFactory.Create(false, int.MaxValue);
    string[] ss1 = new string[2];
    ss1[0] = "\0\0";
    ss1[1] = "";
    generatedCode = GeneratedCodeFactory.Create
                        ((IVariable)varInteger, (IStatement[])null, ss1, (string[])null);
    this.AddGeneratedCode(combinedGeneratedCode, (IExecutableCode)generatedCode);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsNotNull(combinedGeneratedCode.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void AddGeneratedCode35211()
{
    CombinedGeneratedCode combinedGeneratedCode;
    CombinedGeneratedCode combinedGeneratedCode1;
    string[] ss = new string[4];
    ss[0] = "\0\0";
    ss[1] = "\0\0\0\0";
    ss[2] = "";
    ss[3] = "\0\0\0\0\0\0";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock)null);
    combinedGeneratedCode1 =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode1, (IExecutableCode)combinedGeneratedCode);
    Assert.IsNotNull((object)combinedGeneratedCode1);
    Assert.IsNotNull(combinedGeneratedCode1.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode1.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode1.IncludeFiles);
    Assert.IsNull(combinedGeneratedCode1.CodeBody);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException609()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    string[] ss1 = new string[1];
    ss[0] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                (ss, (string[])null, ss1, (IBookingStatementBlock)null);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
    }
}
