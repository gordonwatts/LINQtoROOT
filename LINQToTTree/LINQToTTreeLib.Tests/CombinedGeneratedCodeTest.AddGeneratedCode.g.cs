using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Variables;
using LINQToTTreeLib.Statements;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class CombinedGeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException738()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[0];
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException227()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException993()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    ss[0] = "";
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException818()
{
    VarInteger varInteger;
    StatementLoopOverGood statementLoopOverGood;
    StatementInlineBlock statementInlineBlock;
    CombinedGeneratedCode combinedGeneratedCode;
    varInteger = VarIntegerFactory.Create(false, 0);
    IStatement[] iStatements = new IStatement[0];
    IVariable[] iVariables = new IVariable[0];
    statementLoopOverGood =
      StatementLoopOverGoodFactory.Create((IValue)varInteger, (IValue)varInteger, 
                                          (IValue)varInteger, iStatements, iVariables);
    IBookingStatementBlock[] iBookingStatementBlocks = new IBookingStatementBlock[1]
      ;
    iBookingStatementBlocks[0] = (IBookingStatementBlock)statementLoopOverGood;
    statementInlineBlock = StatementInlineBlockFactory.Create
                               ((IStatement[])iBookingStatementBlocks, (IVariable[])null);
    IBookingStatementBlock[] iBookingStatementBlocks1
       = new IBookingStatementBlock[1];
    string[] ss = new string[0];
    iBookingStatementBlocks1[0] = (IBookingStatementBlock)statementInlineBlock;
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, iBookingStatementBlocks1, ss);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException870()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[2];
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
[ExpectedException(typeof(ArgumentException))]
public void AddGeneratedCodeThrowsArgumentException679()
{
    CombinedGeneratedCode combinedGeneratedCode;
    string[] ss = new string[1];
    string[] ss1 = new string[1];
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, (string[])null, ss, (IBookingStatementBlock[])null, ss1);
    this.AddGeneratedCode
        (combinedGeneratedCode, (IExecutableCode)combinedGeneratedCode);
}
    }
}
