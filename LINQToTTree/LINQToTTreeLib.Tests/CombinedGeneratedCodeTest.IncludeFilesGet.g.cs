using System.Collections.Generic;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib
{
    public partial class CombinedGeneratedCodeTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet216()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[0];
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet21601()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[1];
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet21602()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[1];
    ss[0] = "";
    combinedGeneratedCode =
      CombinedGeneratedCodeFactory.Create((string[])null, (string[])null, 
                                          (string[])null, (IBookingStatementBlock[])null, ss);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet885()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[5];
    string[] ss1 = new string[2];
    string[] ss2 = new string[2];
    ss[0] = "\u0089\u0089";
    ss[1] = "\u0089\u0089\u0001\u0089";
    ss[2] = "\u0089\u0089\u0001\u0089";
    ss[3] = "\u0089\u0089\u0001\u0089";
    ss[4] = "\u0089\u0089\u0001\u0089";
    ss1[0] = "";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, ss, ss1, (IBookingStatementBlock[])null, ss2);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet970()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[5];
    string[] ss1 = new string[5];
    string[] ss2 = new string[5];
    ss[0] = "\u0089\u0089";
    ss[1] = "\u0089\u0089\u0089\u0089";
    ss[2] = "\u0089\u0089\u0089\u0089";
    ss[3] = "\u0089\u0089\u0089\u0089";
    ss[4] = "\u0089\u0089\u0089\u0089";
    ss1[0] = "\u0089\u0089";
    ss1[1] = "";
    ss1[2] = "\u0089\u0089\u0089";
    ss1[3] = "\u0089\u0089\u0089\u0089";
    ss1[4] = "\u0089";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                ((string[])null, ss, ss1, (IBookingStatementBlock[])null, ss2);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
[TestMethod]
[PexGeneratedBy(typeof(CombinedGeneratedCodeTest))]
public void IncludeFilesGet978()
{
    CombinedGeneratedCode combinedGeneratedCode;
    IEnumerable<string> iEnumerable;
    string[] ss = new string[1];
    string[] ss1 = new string[1];
    string[] ss2 = new string[1];
    ss[0] = "\u0100";
    ss1[0] = "\u0100";
    combinedGeneratedCode = CombinedGeneratedCodeFactory.Create
                                (ss, ss1, (string[])null, (IBookingStatementBlock[])null, ss2);
    iEnumerable = this.IncludeFilesGet(combinedGeneratedCode);
    Assert.IsNotNull((object)iEnumerable);
    Assert.IsNotNull((object)combinedGeneratedCode);
    Assert.IsNotNull(combinedGeneratedCode.VariablesToTransfer);
    Assert.IsNotNull(combinedGeneratedCode.ResultValues);
    Assert.IsNotNull(combinedGeneratedCode.IncludeFiles);
    Assert.IsTrue(object.ReferenceEquals
                      (combinedGeneratedCode.IncludeFiles, (object)iEnumerable));
    Assert.IsNotNull(combinedGeneratedCode.ReferencedLeafNames);
}
    }
}
