using System.Linq.Expressions;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
// <copyright file="TypeHandlerCacheTest.ProcessMethodCall.g.cs" company="Microsoft">Copyright © Microsoft 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.TypeHandlers
{
    public partial class TypeHandlerCacheTest
    {
[TestMethod]
[PexGeneratedBy(typeof(TypeHandlerCacheTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessMethodCallThrowsArgumentNullException300()
{
    TypeHandlerCache typeHandlerCache;
    Expression expression;
    typeHandlerCache = new TypeHandlerCache();
    expression =
      this.ProcessMethodCall(typeHandlerCache, (MethodCallExpression)null, 
                             (IGeneratedQueryCode)null, (ICodeContext)null);
}
[TestMethod]
[PexGeneratedBy(typeof(TypeHandlerCacheTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void ProcessMethodCallThrowsInvalidOperationException793()
{
    TypeHandlerCache typeHandlerCache;
    MethodCallExpression methodCallExpression;
    Expression expression;
    typeHandlerCache = new TypeHandlerCache();
    methodCallExpression = MethodCallExpressionFactory.Create();
    expression = this.ProcessMethodCall(typeHandlerCache, methodCallExpression, 
                                        (IGeneratedQueryCode)null, (ICodeContext)null);
}
    }
}
