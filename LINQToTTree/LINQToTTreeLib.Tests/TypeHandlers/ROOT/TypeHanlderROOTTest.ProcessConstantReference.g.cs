using System.Linq.Expressions;
using LINQToTTreeLib.Variables;
using LINQToTTreeLib;
using LinqToTTreeInterfacesLib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System;
using LINQToTTreeLib.Statements;
using LINQToTTreeLib.Moles;
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>

namespace LINQToTTreeLib.TypeHandlers.ROOT
{
    public partial class TypeHanlderROOTTest
    {
[TestMethod]
[PexGeneratedBy(typeof(TypeHanlderROOTTest))]
[ExpectedException(typeof(ArgumentException))]
public void ProcessConstantReferenceThrowsArgumentException695()
{
    ConstantExpression constantExpression;
    SGeneratedCode sGeneratedCode;
    IValue iValue;
    constantExpression = ConstantExpressionFactory.Create(0);
    sGeneratedCode = new SGeneratedCode();
    TypeHandlerROOT s0 = new TypeHandlerROOT();
    iValue = this.ProcessConstantReference
                 (s0, constantExpression, (IGeneratedQueryCode)sGeneratedCode);
}
[TestMethod]
[PexGeneratedBy(typeof(TypeHanlderROOTTest))]
public void ProcessConstantReference755()
{
    ConstantExpression constantExpression;
    SGeneratedCode sGeneratedCode;
    IValue iValue;
    constantExpression = ConstantExpressionFactory.Create(1);
    sGeneratedCode = new SGeneratedCode();
    TypeHandlerROOT s0 = new TypeHandlerROOT();
    iValue = this.ProcessConstantReference
                 (s0, constantExpression, (IGeneratedQueryCode)sGeneratedCode);
    Assert.IsNotNull((object)iValue);
    Assert.IsNotNull((object)s0);
}
    }
}
