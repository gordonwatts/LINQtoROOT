// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using LinqToTTreeInterfacesLib;
using System.Linq.Expressions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using LINQToTTreeLib.Variables;
using LINQToTTreeLib;
using LinqToTTreeInterfacesLib.Moles;
using Microsoft.Pex.Framework.Moles;

namespace LINQToTTreeLib.TypeHandlers.ROOT
{
    public partial class TypeHanlderROOTTest
    {
[TestMethod]
[PexGeneratedBy(typeof(TypeHanlderROOTTest))]
[ExpectedException(typeof(ArgumentException))]
public void ProcessConstantReferenceThrowsArgumentException306()
{
    ConstantExpression constantExpression;
    SIGeneratedQueryCode sIGeneratedQueryCode;
    IValue iValue;
    constantExpression = ConstantExpressionFactory.Create(0);
    sIGeneratedQueryCode = new SIGeneratedQueryCode();
    TypeHandlerROOT s0 = new TypeHandlerROOT();
    iValue = this.ProcessConstantReference
                 (s0, constantExpression, (IGeneratedQueryCode)sIGeneratedQueryCode);
}
[TestMethod]
[PexGeneratedBy(typeof(TypeHanlderROOTTest))]
public void ProcessConstantReference129()
{
    using (PexChooseBehavedBehavior.Setup())
    {
      ConstantExpression constantExpression;
      SIGeneratedQueryCode sIGeneratedQueryCode;
      IValue iValue;
      constantExpression = ConstantExpressionFactory.Create(1);
      sIGeneratedQueryCode = new SIGeneratedQueryCode();
      TypeHandlerROOT s0 = new TypeHandlerROOT();
      iValue = this.ProcessConstantReference
                   (s0, constantExpression, (IGeneratedQueryCode)sIGeneratedQueryCode);
      Assert.IsNotNull((object)iValue);
      Assert.IsNotNull((object)s0);
    }
}
    }
}
